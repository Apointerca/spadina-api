FORMAT: 1A
HOST: http://apointer.ca

# API documentation for Spadina

# Group General
Please refer to [Decision Graph](http://clojure-liberator.github.io/liberator/assets/img/decision-graph.svg) for details.

## General HTTP status code
As HTTP status code contains a lot of information, here we demonstrate some of them, so we can use them directly in our response.

### 200
This is the most common status code. It basically means things are going well.
But usually it returns together with response body.
Mostly for `GET` request.

### 201
This status code indicates the requested resource has been created.
Response body should be returned together.
Mostly for `POST` request.

### 204
Similar to `200`, but nothing would come together with this status.
Mostly for `DELETE` and `PUT` requests.

## General HTTP status error code

To avoid redundent error code declaration, here we list all the default meaning of corresponding error code.
Please explicitly describe in each response if the meaning is different from what we state here.

### 400
Malformed request, this request is reported.
### 401
This request is not authorized.
### 403
This request doesn't have permission to access the resource.
### 404
The target resource is not found.
### 405
HTTP request method is not allowed.
### 406
The request parameters and headers not acceptable.
Please change it according to documentation.
### 409
Usually happens when creating a resource that already exists.

# Data Structure

## Pagination (object)
+ pageNumber: `1` (number, required) - The current page number, start from `1`
+ pageSize: `10` (number, required) - The number of record in each page. The minimum size is `5`
+ totalPage: `3` (number, required) - The total number of pages, minimum is `1`

# Group Notification Service

## Receive and broadcast notifications to all subscribers of a specific store [/notificationPool/send/notification/{storeId}]
Send received notifications to the channel that is identified by the unique storeId.
Then, all subscribers of that channel will receive the same notifications at the same time.

[!!] This is not a REST API as it is essentially a websocket API. Therefore, in order to use it,
     one has to make a websocket connection first then send messages using websocket methods.

### Send notification [POST]
Send notifications to a group of subscribers who have subscribed to a specific store channel.

+ Parameters
    + storeId (int) - An unique storeId that is assigned when a store first created in our system

+ Request

    + Body

            {
                "message": "You have a new appointment!"
            }

+ Response 200
This indicates all received notifications have successfully been sent to the {storeId}} store channel

    + Body

+ Response 500
This indicates all received notifications cannot be delivered to the {storeId} store channel.
Detailed error messages are logged on the server.

    + Body

